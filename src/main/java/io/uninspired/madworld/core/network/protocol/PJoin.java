// automatically generated by the FlatBuffers compiler, do not modify

package io.uninspired.madworld.core.network.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PJoin extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PJoin getRootAsPJoin(ByteBuffer _bb) { return getRootAsPJoin(_bb, new PJoin()); }
  public static PJoin getRootAsPJoin(ByteBuffer _bb, PJoin obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PJoin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int playerId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String joinMessage() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer joinMessageAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer joinMessageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createPJoin(FlatBufferBuilder builder,
      int playerId,
      int joinMessageOffset) {
    builder.startTable(2);
    PJoin.addJoinMessage(builder, joinMessageOffset);
    PJoin.addPlayerId(builder, playerId);
    return PJoin.endPJoin(builder);
  }

  public static void startPJoin(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addPlayerId(FlatBufferBuilder builder, int playerId) { builder.addInt(0, playerId, 0); }
  public static void addJoinMessage(FlatBufferBuilder builder, int joinMessageOffset) { builder.addOffset(1, joinMessageOffset, 0); }
  public static int endPJoin(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PJoin get(int j) { return get(new PJoin(), j); }
    public PJoin get(PJoin obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

