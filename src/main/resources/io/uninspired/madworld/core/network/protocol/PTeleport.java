// automatically generated by the FlatBuffers compiler, do not modify

package io.uninspired.madworld.core.network.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PTeleport extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PTeleport getRootAsPTeleport(ByteBuffer _bb) { return getRootAsPTeleport(_bb, new PTeleport()); }
  public static PTeleport getRootAsPTeleport(ByteBuffer _bb, PTeleport obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PTeleport __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int playerId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public io.uninspired.madworld.core.network.protocol.Vec2 to() { return to(new io.uninspired.madworld.core.network.protocol.Vec2()); }
  public io.uninspired.madworld.core.network.protocol.Vec2 to(io.uninspired.madworld.core.network.protocol.Vec2 obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startPTeleport(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addPlayerId(FlatBufferBuilder builder, int playerId) { builder.addInt(0, playerId, 0); }
  public static void addTo(FlatBufferBuilder builder, int toOffset) { builder.addStruct(1, toOffset, 0); }
  public static int endPTeleport(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PTeleport get(int j) { return get(new PTeleport(), j); }
    public PTeleport get(PTeleport obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

