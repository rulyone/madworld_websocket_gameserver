// automatically generated by the FlatBuffers compiler, do not modify

package io.uninspired.madworld.core.network.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class PEntity extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PEntity getRootAsPEntity(ByteBuffer _bb) { return getRootAsPEntity(_bb, new PEntity()); }
  public static PEntity getRootAsPEntity(ByteBuffer _bb, PEntity obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PEntity __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public io.uninspired.madworld.core.network.protocol.Vec2 pos() { return pos(new io.uninspired.madworld.core.network.protocol.Vec2()); }
  public io.uninspired.madworld.core.network.protocol.Vec2 pos(io.uninspired.madworld.core.network.protocol.Vec2 obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public short hp() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 100; }
  public short mana() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) : 100; }
  public String name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static void startPEntity(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addPos(FlatBufferBuilder builder, int posOffset) { builder.addStruct(0, posOffset, 0); }
  public static void addHp(FlatBufferBuilder builder, short hp) { builder.addShort(1, hp, 100); }
  public static void addMana(FlatBufferBuilder builder, short mana) { builder.addShort(2, mana, 100); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(3, nameOffset, 0); }
  public static int endPEntity(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PEntity get(int j) { return get(new PEntity(), j); }
    public PEntity get(PEntity obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

